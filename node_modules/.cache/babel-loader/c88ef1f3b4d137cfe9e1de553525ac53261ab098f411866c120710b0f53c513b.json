{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peter\\\\Documents\\\\Development\\\\Projects\\\\first_app\\\\brackets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BracketValidator() {\n  _s();\n  const [inputString, setInputString] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const stack = [];\n    var missing = null;\n    const openingBracketStack = [];\n    const map = {\n      '(': ')',\n      '[': ']',\n      '{': '}',\n      '<': '>'\n    };\n    const map2 = {\n      ')': '(',\n      ']': '[',\n      '}': '{',\n      '>': '<'\n    };\n    var isBracketValid = function (s) {\n      for (let i = 0; i < s.length; i++) {\n        let c = s[i];\n        if (map[c]) {\n          stack.push(map[c]);\n        } else {\n          var potential = stack.pop();\n          if (c != potential) {\n            missing = c;\n            return false;\n          }\n        }\n      }\n      return !stack.length;\n    };\n    if (isBracketValid(inputString)) {\n      setHistory(prevHistory => [...prevHistory, {\n        string: inputString,\n        reason: \"Valid\"\n      }]);\n    } else if (missing) {\n      if (map[missing]) {\n        var openingpair = map[missing];\n        let str = 'aaa Invalid opening bracket ' + missing + ', missing closing bracket  ' + openingpair;\n        setHistory(prevHistory => [...prevHistory, {\n          string: inputString,\n          reason: str\n        }]);\n      } else if (map2[missing]) {\n        var prev = stack[stack.length - 1];\n        let str = null;\n        if (prev && missing != map2[prev]) {\n          str = 'bbb Invalid closing bracket ' + missing + ', missing closing bracket  ' + map2[prev] + '   this is prev   ' + stack + 'this is missing ' + missing;\n        } else {\n          str = 'ccc Invalid closing bracket ' + missing + ', missing closing bracket  ' + map2[missing] + stack;\n        }\n        setHistory(prevHistory => [...prevHistory, {\n          string: inputString,\n          reason: str\n        }]);\n      }\n    } else if (stack.length) {\n      var missingClosing = stack[stack.length - 1];\n      var closingPair = map2[missingClosing];\n      let str = 'ttt Invalid opening bracket ' + closingPair + ', missing closing bracket  ' + missingClosing;\n      setHistory(prevHistory => [...prevHistory, {\n        string: inputString,\n        reason: str\n      }]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input String:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputString,\n          onChange: event => setInputString(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Input String\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: history.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.string\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(BracketValidator, \"6dxiFfz+nknk8+SFY+EaNVVRPNA=\");\n_c = BracketValidator;\nvar _c;\n$RefreshReg$(_c, \"BracketValidator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BracketValidator","_s","inputString","setInputString","history","setHistory","handleSubmit","event","preventDefault","stack","missing","openingBracketStack","map","map2","isBracketValid","s","i","length","c","push","potential","pop","prevHistory","string","reason","openingpair","str","prev","missingClosing","closingPair","children","onSubmit","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Peter/Documents/Development/Projects/first_app/brackets/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function BracketValidator() {\n  const [inputString, setInputString] = useState(\"\");\n  const [history, setHistory] = useState([]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const stack = [];\n    var missing = null;\n    const openingBracketStack = [];\n\n    const map = {\n      '(': ')',\n      '[': ']',\n      '{': '}',\n      '<': '>',\n    }\n\n    const map2 = {\n      ')': '(',\n      ']': '[',\n      '}': '{',\n      '>': '<',\n    }\n\n    var isBracketValid = function(s) {   \n\n      \n      for (let i = 0 ; i < s.length ; i++) {\n          let c = s[i];\n          if (map[c]) {\n            stack.push(map[c])\n          }\n          else{\n            var potential = stack.pop();\n            if (c!=potential){\n              missing = c;\n              return false;\n            }\n          }\n      }\n      return !stack.length;\n  };\n\n    if (isBracketValid(inputString)) {\n      setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: \"Valid\" }]);\n    }\n    else if (missing){\n      if (map[missing]){\n        var openingpair = map[missing];\n        let str = 'aaa Invalid opening bracket ' + missing +', missing closing bracket  '+ openingpair\n        setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: str}]);\n      }\n      else if (map2[missing]){\n        var prev = stack[stack.length-1];\n        let str = null;\n        if (prev && missing != map2[prev]){\n\n           str = 'bbb Invalid closing bracket ' + missing +', missing closing bracket  '+ map2[prev] + '   this is prev   ' + stack + 'this is missing ' + missing\n\n        }\n        else{\n           str = 'ccc Invalid closing bracket ' + missing +', missing closing bracket  '+ map2[missing] + stack\n\n        }\n        setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: str}]);\n      }\n    }\n    else if (stack.length){\n      var missingClosing = stack[stack.length-1];\n      var closingPair = map2[missingClosing];\n      let str = 'ttt Invalid opening bracket ' + closingPair +', missing closing bracket  '+ missingClosing\n      setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: str}]);\n    }\n    \n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Input String:\n          <textarea value={inputString} onChange={(event) => setInputString(event.target.value)} />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Input String</th>\n            <th>Reason</th>\n          </tr>\n        </thead>\n        <tbody>\n          {history.map((item, index) => (\n            <tr key={index}>\n              <td>{item.string}</td>\n              <td>{item.reason}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}