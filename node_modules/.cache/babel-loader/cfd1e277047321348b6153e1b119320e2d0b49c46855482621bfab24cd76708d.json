{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peter\\\\Documents\\\\Development\\\\Projects\\\\first_app\\\\brackets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BracketValidator() {\n  _s();\n  const [inputString, setInputString] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const openingBrackets = [\"[\", \"{\", \"(\"];\n    const closingBrackets = [\"]\", \"}\", \")\"];\n    const openingBracketStack = [];\n    var isBracketValid = function (bracket) {\n      const stack = [];\n      const map = {\n        '(': ')',\n        '[': ']',\n        '{': '}'\n      };\n      for (let i = 0; i < s.length; i++) {\n        let c = s[i];\n        if (map[c]) {\n          stack.push(map[c]);\n        } else if (c !== stack.pop()) {\n          return false;\n        }\n      }\n      return !stack.length;\n    };\n    if (isBracketValid(inputString)) {\n      setHistory(prevHistory => [...prevHistory, {\n        string: inputString,\n        reason: \"Valid\"\n      }]);\n    } else {\n      setHistory(prevHistory => [...prevHistory, {\n        string: inputString,\n        reason: \"Invalid\"\n      }]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input String:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputString,\n          onChange: event => setInputString(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Input String\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: history.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.string\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(BracketValidator, \"6dxiFfz+nknk8+SFY+EaNVVRPNA=\");\n_c = BracketValidator;\nvar _c;\n$RefreshReg$(_c, \"BracketValidator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BracketValidator","_s","inputString","setInputString","history","setHistory","handleSubmit","event","preventDefault","openingBrackets","closingBrackets","openingBracketStack","isBracketValid","bracket","stack","map","i","s","length","c","push","pop","prevHistory","string","reason","children","onSubmit","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Peter/Documents/Development/Projects/first_app/brackets/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function BracketValidator() {\n  const [inputString, setInputString] = useState(\"\");\n  const [history, setHistory] = useState([]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const openingBrackets = [\"[\", \"{\", \"(\"];\n    const closingBrackets = [\"]\", \"}\", \")\"];\n    const openingBracketStack = [];\n\n    var isBracketValid = function(bracket) {   \n      const stack = [];\n      const map = {\n        '(': ')',\n        '[': ']',\n        '{': '}'\n      }\n      \n      for (let i = 0 ; i < s.length ; i++) {\n          let c = s[i];\n          if (map[c]) {\n            stack.push(map[c])\n          } else if (c !== stack.pop()) {\n            return false;\n          } \n      }\n      \n      return !stack.length;\n  };\n\n    if (isBracketValid(inputString)) {\n      setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: \"Valid\" }]);\n    } else {\n      setHistory((prevHistory) => [...prevHistory, { string: inputString, reason: \"Invalid\" }]);\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Input String:\n          <textarea value={inputString} onChange={(event) => setInputString(event.target.value)} />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Input String</th>\n            <th>Reason</th>\n          </tr>\n        </thead>\n        <tbody>\n          {history.map((item, index) => (\n            <tr key={index}>\n              <td>{item.string}</td>\n              <td>{item.reason}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}